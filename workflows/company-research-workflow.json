{
  "name": "Company Research Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "research-webhook",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Research Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "research-webhook"
    },
    {
      "parameters": {
        "url": "={{ $json.companyUrl }}",
        "options": {
          "redirect": {
            "redirect": {
              "followRedirects": true,
              "maxRedirects": 3
            }
          },
          "timeout": 30000
        }
      },
      "id": "website-scraper",
      "name": "Website Scraper",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract website content and metadata\nconst html = $input.first().json.data;\nconst url = $('\"Webhook\"').first().json.body.companyUrl;\n\n// Basic content extraction (simplified)\nconst titleMatch = html.match(/<title>(.*?)<\\/title>/i);\nconst title = titleMatch ? titleMatch[1] : 'No title found';\n\n// Extract meta description\nconst metaDescMatch = html.match(/<meta name=\"description\" content=\"(.*?)\"/i);\nconst description = metaDescMatch ? metaDescMatch[1] : 'No description found';\n\n// Count key business terms\nconst businessTerms = ['service', 'product', 'solution', 'business', 'company', 'enterprise', 'customer'];\nconst termCounts = {};\nbusinessTerms.forEach(term => {\n  const regex = new RegExp(term, 'gi');\n  termCounts[term] = (html.match(regex) || []).length;\n});\n\nreturn {\n  website_analysis: {\n    url: url,\n    title: title,\n    description: description,\n    content_length: html.length,\n    business_term_frequency: termCounts,\n    analyzed_at: new Date().toISOString()\n  }\n};"
      },
      "id": "content-analyzer",
      "name": "Content Analyzer",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Simulate social media analysis\nconst websiteData = $input.first().json.website_analysis;\nconst domain = new URL(websiteData.url).hostname;\n\n// Simulate social media presence scores\nconst socialMediaAnalysis = {\n  domain: domain,\n  estimated_social_presence: {\n    linkedin: Math.floor(Math.random() * 100),\n    twitter: Math.floor(Math.random() * 100),\n    facebook: Math.floor(Math.random() * 100),\n    instagram: Math.floor(Math.random() * 50)\n  },\n  engagement_estimate: Math.floor(Math.random() * 1000),\n  social_mentions: Math.floor(Math.random() * 500),\n  analyzed_at: new Date().toISOString()\n};\n\nreturn {\n  ...websiteData,\n  social_media_analysis: socialMediaAnalysis\n};"
      },
      "id": "social-media-analyzer",
      "name": "Social Media Analyzer",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Simulate competitive analysis\nconst data = $input.first().json;\nconst domain = new URL(data.website_analysis.url).hostname;\n\n// Generate simulated competitive data\nconst competitorAnalysis = {\n  industry: 'Technology', // Could be enhanced with ML classification\n  estimated_market_size: 'Mid-Market',\n  competitive_positioning: 'Emerging',\n  key_differentiators: [\n    'Digital Innovation',\n    'Customer Focus',\n    'Market Agility'\n  ],\n  competitor_count_estimate: Math.floor(Math.random() * 50) + 10,\n  market_maturity: 'Growing',\n  analyzed_at: new Date().toISOString()\n};\n\nreturn {\n  ...data,\n  competitor_analysis: competitorAnalysis\n};"
      },
      "id": "competitive-analyzer",
      "name": "Competitive Analyzer",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "jsCode": "// Compile final research report\nconst researchData = $input.first().json;\nconst webhookData = $('\"Research Webhook\"').first().json.body;\n\n// Calculate confidence scores\nconst confidenceScores = {\n  website_analysis: 0.95, // High confidence from direct scraping\n  social_media_analysis: 0.65, // Medium confidence from estimation\n  competitor_analysis: 0.70, // Medium-high confidence from heuristics\n  overall_confidence: 0.77\n};\n\n// Prepare final research payload\nconst finalReport = {\n  research_id: webhookData.researchId,\n  company_url: webhookData.companyUrl,\n  research_timestamp: new Date().toISOString(),\n  web_scraping_results: researchData.website_analysis,\n  social_media_analysis: researchData.social_media_analysis,\n  competitor_data: researchData.competitor_analysis,\n  confidence_scores: confidenceScores,\n  source_urls: [webhookData.companyUrl],\n  processing_status: 'completed',\n  // Additional fields for assessment session creation\n  artifacts_generated: 23, // Number of artifacts for interview\n  assessment_readiness: true\n};\n\nreturn finalReport;"
      },
      "id": "research-compiler",
      "name": "Research Compiler",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.callback_url || 'https://your-app-domain.com/api/research/webhook' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $json.api_key || 'your-webhook-auth-token' }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "research_data",
              "value": "={{ JSON.stringify($json) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "webhook-callback",
      "name": "Webhook Callback",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "Research Webhook": {
      "main": [
        [
          {
            "node": "Website Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Website Scraper": {
      "main": [
        [
          {
            "node": "Content Analyzer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Analyzer": {
      "main": [
        [
          {
            "node": "Social Media Analyzer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Social Media Analyzer": {
      "main": [
        [
          {
            "node": "Competitive Analyzer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Competitive Analyzer": {
      "main": [
        [
          {
            "node": "Research Compiler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Compiler": {
      "main": [
        [
          {
            "node": "Webhook Callback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1",
  "id": "company-research-workflow",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}